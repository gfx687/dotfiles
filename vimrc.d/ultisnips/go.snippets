snippet fp "fmt.Println" Ab
fmt.Printf("${1}\n", ${2})
endsnippet

snippet : ":=" Ab
$1 := $0
endsnippet

snippet _: ":=" Ab
$1, _ := $0
endsnippet

snippet e: "_, err :=" Ab
$1, err := $2
if err != nil {
	$3
}
endsnippet

# snippet "(.*)\.(\d)" "Description" Awr
# `!p snip.rv=match.group(1) + "[" + match.group(2) + "]"`
# endsnippet

snippet examplehttp "mini http server example" Ab
package main

import (
	"encoding/json"
	"net/http"
)

type SA struct {
	Msg string
	Code int
}

func greet(w http.ResponseWriter, r *http.Request) {
	jData, err := json.Marshal(&SA{"message", 123})
	if err != nil {

	}

	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(http.StatusAccepted)
	w.Write(jData)
}

func main() {
	http.HandleFunc("/", greet)
	http.ListenAndServe(":8080", nil)
}
endsnippet
