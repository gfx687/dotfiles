snippet { "{$0}" i
{$0}
endsnippet


snippet r "return" b
return $0
endsnippet

snippet rt "return true" b
return true
endsnippet

snippet rf "return false" b
return false
endsnippet

snippet rn "return nil" b
return nil
endsnippet

snippet re "return err" b
return err
endsnippet

snippet rne "return nil, err" b
return nil, err
endsnippet

snippet rre "return DATA, err" b
return $0, err
endsnippet


snippet i "if" b
if $1 {
    ${0:${VISUAL}}
}
endsnippet

snippet ie "if err != nil" b
if ${1:err} != nil {
    $0
}
endsnippet

snippet in "if == nil" b
if $1 == nil {
    $0
}
endsnippet

snippet inn "if != nil" b
if $1 != nil {
    $0
}
endsnippet


snippet fori "for i := 0; i < ; i++" b
for ${1:i} := ${2:0}; $1 < $3; $1++ {
	$0
}
endsnippet

snippet forr "for a, b := range" b
for $1, $2 := range $3 {
	$0
}
endsnippet


snippet m "map[$1]$2" w
map[${1:string}]${2:string}
endsnippet

snippet set "map[$1]bool{}" w
map[${1:string}]bool{}
endsnippet


snippet ts "type struct" b
type $1 struct {
	$0
}
endsnippet

snippet ti "type interface" b
type $1 interface {
	$0
}
endsnippet


snippet fln "fmt.Println" b
fmt.Println($1)
endsnippet

snippet fpf "fmt.Printf" b
fmt.Printf("$1\n", $2)
endsnippet

snippet fsf "fmt.Sprintf" w
fmt.Sprintf("$1", $2)
endsnippet

snippet fef "fmt.Errorf" w
fmt.Errorf("$1")
endsnippet


snippet ew "error wrap" w
fmt.Errorf("$1: %w", ${2:err})
endsnippet


snippet fm "method" b
func ($1) $2($3) $4 {
    $0
}
endsnippet

snippet fu "func" b
func $1($2) $3 {
    $0
}
endsnippet
