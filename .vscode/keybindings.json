// Place your key bindings in this file to override the defaults
[
    // {
    //     "key": "ctrl+u",
    //     "command": "-cursorUndo",
    //     "when": "textInputFocus"
    // },
    // {
    //     "key": "ctrl+d",
    //     "command": "-editor.action.addSelectionToNextFindMatch",
    //     "when": "editorFocus"
    // },
    // snippets
    {
        "key": "ctrl+j",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    {
        "key": "ctrl+k",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode"
    },
    // go to symbol
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.showAllSymbols",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    // file picker navigation and actions
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.acceptSelectedQuickOpenItem",
        "when": "inQuickOpen"
    },
    // quickfix navigate and accept
    {
        "key": "ctrl+k",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+m",
        "command": "acceptSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
    // pressing C-m with vim behaves differently from Enter
    // it is still not 100% match with this but at least you get correct indentation
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && !inDebugRepl && vim.mode == 'Insert'",
        "args": {
            "snippet": "\n"
        }
    },
    // format selection and entire file with same keybind
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasSelection && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument",
        "when": "!editorHasSelection && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    // other
    {
        "key": "shift+alt+p",
        "command": "-projectManager.listProjects"
    },
    {
        "key": "shift+alt+p",
        "command": "projectManager.listProjectsNewWindow"
    }
]